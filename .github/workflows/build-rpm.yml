# Copyright (C) 2023 Sebastian Pipping <sebastian@pipping.org>
# Licensed under GPL v3 or later

name: Build RPM package for Linux

# Drop permissions to minimum for security
permissions:
  contents: read

on:
  pull_request:
  push:
  schedule:
    - cron: '0 2 * * 5'  # Every Friday at 2am

jobs:
  build-rpm:
    name: Build RPM package for Linux
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9, '3.10', 3.11]
    runs-on: ubuntu-22.04
    env:
      PYVER: ${{ matrix.python-version }}
    steps:
    - uses: actions/checkout@8e5e7e5ab8b370d6c329ec480221332ada57f0ab  # v3.5.2

    - name: Install dependencies
      run: |
        set -x -u
        use_deadsnakes="$(python3 -c 'import os, sys; print("false" if ".".join(str(e) for e in sys.version_info[:2]) == os.environ["PYVER"] else "true")')"

        if ${use_deadsnakes}; then
            # NOTE: We are avoiding actions/setup-python only because
            #       we need Python interpreters at /usr/bin/python3.XX
            #       rather than /opt/hostedtoolcache/[..] for bdist_rpm.
            sudo add-apt-repository ppa:deadsnakes/ppa
        fi

        sudo apt-get update

        sudo apt-get install --no-install-recommends --yes -V \
            gettext \
            gir1.2-gdkpixbuf-2.0 \
            gir1.2-glib-2.0 \
            gir1.2-gstreamer-1.0 \
            gir1.2-gtk-3.0 \
            gir1.2-gtksource-3.0 \
            gir1.2-pango-1.0 \
            gir1.2-rsvg-2.0 \
            gstreamer1.0-plugins-base \
            gstreamer1.0-plugins-good \
            libgirepository1.0-dev

        if ${use_deadsnakes}; then
            sudo apt-get install --no-install-recommends --yes -V \
                python${PYVER} \
                python${PYVER}-dev \
                python${PYVER}-venv
        fi

        apt-cache policy python${PYVER}

        ls -l /usr/bin/python*

        if ${use_deadsnakes}; then
            sudo rm /usr/bin/python
            sudo rm /usr/bin/python3
            sudo rm /usr/bin/python3-config
            sudo ln -s python${PYVER} /usr/bin/python
            sudo ln -s python${PYVER} /usr/bin/python3
            sudo ln -s python${PYVER}-config /usr/bin/python3-config
        fi

        sed 's,:,\n,g' <<<"${PATH}"

        which python
        which python3

        python --version
        python3 --version

        # At least for non-deadsnakes Python, we would end up with files
        # in /usr/local rather than /usr without this adjustment:
        cat <<PYDISTUTILS_CFG_EOF | tee ~/.pydistutils.cfg
        [install]
        prefix = /usr
        PYDISTUTILS_CFG_EOF

    - name: Install from sources
      run: |
        set -x -u
        python3 --version
        python3 -m venv venv
        source venv/bin/activate

        pip3 install -U pip setuptools wheel
        pip3 install -r requirements.txt
        diff -u0 <(sed -e 's,#.*,,' -e '/^$/d' < requirements.txt | sort -f) <(pip3 freeze | sort -f)  # enforces complete pinning

        time PYTHONPATH=lib python3 pgn2ecodb.py
        time PYTHONPATH=lib python3 create_theme_preview.py

        pip3 install -e .

        pychess --help  # smoke test

    - name: "Build RPM package"
      run: |
        set -x -u
        bash -x "create_rpm_py${PYVER/./}.sh"

    - name: Store RPM artifacts
      uses: actions/upload-artifact@0b7f8abb1508181956e8e162db84b466c27e18ce  # v3.1.2
      with:
        name: pychess_rpm_py${{ matrix.python-version }}_${{ github.sha }}
        path: dist/
        if-no-files-found: error
